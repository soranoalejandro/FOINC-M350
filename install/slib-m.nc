O10000
G04P-1
M99

O10001
IF #1500==0 GOTO1
G04P-1
N1
M99

O10002
M99

O10006
M99

O10019
M5
M99

O10030
M5M9M11
IF #730==2 GOTO10
IF #730==1 GOTO20
GOTO30
N10
G90 G00 Z#569
G90 G00 X0 Y0 A0 B0
GOTO30

N20
G53Z#624
#13=0
#14=0
#15=0
#[10+#943] =#625
#[10+#944] =#626
G53X#622Y#623Z#624A#13B#14C#15
GOTO30

N30
#701 = #701+1
#702 = #702+1
#1506 = 30
M99


O10047
#701 = #701+1
#702 = #702+1
#1506 = 47
IF #702==#703 GOTO1
GOTO2
N1
#702 = 0

#1505 = 1(循环次数已到!)
#1620 = 1 (暂停)
G04 P500
N2
M99



O10050
#1552=1
M99

O10051
#1552=0
M99

O10052
#1553=1
M99

O10053
#1553=0
M99

O10054
#1554=1
M99

O10055
#1554=0
M99

O10056
#1555=1
M99

O10057
#1555=0
M99

O10058
#1556=1
M99

O10059
#1556=0
M99

O10060
#1557=1
M99

O10061
#1557=0
M99

O10062
#1558=1
M99

O10063
#1558=0
M99

O10064
#1559=1
M99

O10065
#1559=0
M99


O10066
#1560=1
M99

O10067
#1560=0
M99

O10068
#1561=1
M99

O10069
#1561=0
M99

O10070
#1562=1
M99

O10071
#1562=0
M99

O10072
#1563=1
M99

O10073
#1563=0
M99

O10074
#1564=1
M99

O10075
#1564=0
M99

(OUT 14)
O10076
#1565=1
M99

O10077
#1565=0
M99

(OUT 15)
O10078
#1566=1
M99

O10079
#1566=0
M99

(OUT 16)
O10080
#1567=1
M99

O10081
#1567=0
M99


(OUT 17)
O10082
#1568=1
M99

O10083
#1568=0
M99

(OUT 18)
O10084
#1569=1
M99

O10085
#1569=0
M99

(OUT 19)
O10086
#1570=1
M99

O10087
#1570=0
M99

(OUT 20)
O10088
#1571=1
M99

O10089
#1571=0
M99

(OUT 21)
O10090
#1572=1
M99

O10091
#1572=0
M99


/* M100 开始为功能性代码*/
//全部归零标志置位
O10100
#1515=1
#1516=1
#1517=1
#1518=1
M99

//全部刀换刀对刀
O10101
IF #1302==0 GOTO4; 	无刀库退出
IF #1301==0 GOTO4; 

T0  //当前刀还刀
#2 = 1
WHILE [#2 <= #1301] DO1   
T#2
#2 = #2+1
END1 

N4
M99

//推料动作
O10102
M159  //真空泵关闭
M157 // 定位气缸关闭
G53 Z#1306 F#563 
#1503 = 1(移动到推料起点.速度:63号参数)
G53 X#1320 Y#1321 F#563 //移动到推料起点
M160  //推料打开
G04 P#1322 //推料延时 设置
#1503 = 1(移动到推料终点.速度:827号参数)
G53 X#1323 Y#1324 F#1327 //移动到推料终点
M163  //关闭吸尘器
#1503 = 1(推料完成后退位置.速度:63号参数)
G53 X#1325 Y#1326  F#563 //推料完成后退位置
M156  //定位气缸打开
M161 //推料关闭
M99

//程序开始操作
O10103
M158 //真空泵打开
M162 //吸尘器打开
M157 // 定位气缸关闭
M161 //推料关闭
M99


//程序结尾操作
O10104
M159 //真空泵关闭
M163 //除尘器打开
M156 // 定位气缸关闭
M161 //推料关闭
M99


//X轴绝对值数据
O10105
#3 =  8388608  //24位编码器
#6 = 1        //螺距
#7 = 1        //从机ID
#8 = 1        //编码器方向

#10=0.5   //两次误差值

#21=0  //读取次数
#22=0
#23=0

N10

#1760 = 1790  	(接受数据缓冲地址)
#1761 = 0     	(串口0)
#1762 = #7  	(X轴从机ID号)
#1763 = 57361  	(编码器圈数地址 )
#1764 = 2  	    (字节数)
#1765 = 0  	    (功能码03)
#1769 = 1  	    (触发读取)
WHILE [#1769 NE 0] DO2 (等待结束完成)
G04P10
END2 
#1510=#1766
#1503 = 1(圈数返回码:[%.0f])

IF #1766!=0 GOTO30
//数据转换
#1770 = 1770
#1771 = 1790 	//字符串索引
#1772 =2 	//字节数
#1773 = 1 	//16位有符号整形
#1775 =1 	//数据转换
#1 = #1770 	//编码器圈数

//#1510=#1770
//#1503 = 1	(H0B-70:[%.0f])
G04 P1
//读取编码器一圈内位置
#1763 = 57360  	(编码器一圈内位置 )
#1764 = 4  	    (字节数)
#1769 = 1  	    (触发读取)
WHILE [#1769 NE 0] DO3 (等待结束完成)
G04P10
END3 
#1510=#1766
#1503 = 1(单圈返回码:[%.0f])

IF #1766!=0 GOTO30
//数据转换
#1770 = 1770
#1771 = 1790 	//字符串索引
#1772 =4 	//字节数
#1773 = 4 	//32位无符号整形
#1775 =1 	//数据转换
#2 = #1770 	//编码器一圈内个数

//#1510=#1770
//#1503 = 1(H0B-71:[%.0f])
G04 P1
#4=#1+[#2/#3] 	//当前位置圈数 浮点型

//连续读两次
#[22+#21]=#4
IF#21==1 GOTO11
#21=#21+1
GOTO10
N11
#24=ABS[#22-#23]
IF#24>#10 GOTO12
GOTO13
N12
#21=0
GOTO10

N13

#5=#4*[#8]	//调整编码器方向  
#9 = #5-#601   //计算相对零点的圈数
#880 = #9*#6     //设置当前机械位置 
#1510=#7 //ID
#1511=#1    //多圈
#1512=#2    //单圈
#1513=#5    //
#1503 = 1(  X轴   SD700 ID[%.0f]:   %.0f   %.0f    %.3f圈)
N30
M99

//Y轴绝对值数据
O10106
#3 =  8388608  //24位编码器
#6 = 1        //螺距
#7 = 2        //从机ID
#8 = 1        //编码器方向

#10=0.5   //两次误差值

#21=0  //读取次数
#22=0
#23=0

N10

#1760 = 1790  	(接受数据缓冲地址)
#1761 = 0     	(串口0)
#1762 = #7  	(X轴从机ID号)
#1763 = 57361  	(编码器圈数地址 )
#1764 = 2  	    (字节数)
#1765 = 0  	    (功能码03)
#1769 = 1  	    (触发读取)
WHILE [#1769 NE 0] DO2 (等待结束完成)
G04P10
END2 
#1510=#1766
#1503 = 1(圈数返回码:[%.0f])

IF #1766!=0 GOTO30
//数据转换
#1770 = 1770
#1771 = 1790 	//字符串索引
#1772 =2 	//字节数
#1773 = 1 	//16位有符号整形
#1775 =1 	//数据转换
#1 = #1770 	//编码器圈数

//#1510=#1770
//#1503 = 1	(H0B-70:[%.0f])
G04 P1
//读取编码器一圈内位置
#1763 = 57360  	(编码器一圈内位置 )
#1764 = 4  	    (字节数)
#1769 = 1  	    (触发读取)
WHILE [#1769 NE 0] DO3 (等待结束完成)
G04P10
END3 
#1510=#1766
#1503 = 1(单圈返回码:[%.0f])

IF #1766!=0 GOTO30
//数据转换
#1770 = 1770
#1771 = 1790 	//字符串索引
#1772 =4 	//字节数
#1773 = 4 	//32位无符号整形
#1775 =1 	//数据转换
#2 = #1770 	//编码器一圈内个数

//#1510=#1770
//#1503 = 1(H0B-71:[%.0f])
G04 P1
#4=#1+[#2/#3] 	//当前位置圈数 浮点型

//连续读两次
#[22+#21]=#4
IF#21==1 GOTO11
#21=#21+1
GOTO10
N11
#24=ABS[#22-#23]
IF#24>#10 GOTO12
GOTO13
N12
#21=0
GOTO10

N13

#5=#4*[#8]	//调整编码器方向  
#9 = #5-#602   //计算相对零点的圈数
#881 = #9*#6     //设置当前机械位置 
#1510=#7 //ID
#1511=#1    //多圈
#1512=#2    //单圈
#1513=#5    //
#1503 = 1(  Y轴   SD700 ID[%.0f]:   %.0f   %.0f    %.3f圈)
N30
M99


//Z轴绝对值数据
O10107
#3 =  8388608  //24位编码器
#6 = 1        //螺距
#7 = 3        //从机ID
#8 = 1        //编码器方向

#10=0.5   //两次误差值

#21=0  //读取次数
#22=0
#23=0

N10

#1760 = 1790  	(接受数据缓冲地址)
#1761 = 0     	(串口0)
#1762 = #7  	(X轴从机ID号)
#1763 = 57361  	(编码器圈数地址 )
#1764 = 2  	    (字节数)
#1765 = 0  	    (功能码03)
#1769 = 1  	    (触发读取)
WHILE [#1769 NE 0] DO2 (等待结束完成)
G04P10
END2 
#1510=#1766
#1503 = 1(圈数返回码:[%.0f])

IF #1766!=0 GOTO30
//数据转换
#1770 = 1770
#1771 = 1790 	//字符串索引
#1772 =2 	//字节数
#1773 = 1 	//16位有符号整形
#1775 =1 	//数据转换
#1 = #1770 	//编码器圈数

//#1510=#1770
//#1503 = 1	(H0B-70:[%.0f])
G04 P1
//读取编码器一圈内位置
#1763 = 57360  	(编码器一圈内位置 )
#1764 = 4  	    (字节数)
#1769 = 1  	    (触发读取)
WHILE [#1769 NE 0] DO3 (等待结束完成)
G04P10
END3 
#1510=#1766
#1503 = 1(单圈返回码:[%.0f])

IF #1766!=0 GOTO30
//数据转换
#1770 = 1770
#1771 = 1790 	//字符串索引
#1772 =4 	//字节数
#1773 = 4 	//32位无符号整形
#1775 =1 	//数据转换
#2 = #1770 	//编码器一圈内个数

//#1510=#1770
//#1503 = 1(H0B-71:[%.0f])
G04 P1
#4=#1+[#2/#3] 	//当前位置圈数 浮点型

//连续读两次
#[22+#21]=#4
IF#21==1 GOTO11
#21=#21+1
GOTO10
N11
#24=ABS[#22-#23]
IF#24>#10 GOTO12
GOTO13
N12
#21=0
GOTO10

N13


#5=#4*[#8]	//调整编码器方向  
#9 = #5-#603   //计算相对零点的圈数
#882 = #9*#6     //设置当前机械位置 
#1510=#7 //ID
#1511=#1    //多圈
#1512=#2    //单圈
#1513=#5    //
#1503 = 1(  Z轴   SD700 ID[%.0f]:   %.0f   %.0f    %.3f圈)
N30
M99


//4th轴绝对值数据
O10108
#3 =  8388608  //24位编码器
#6 = 1        //螺距
#7 = 4        //从机ID
#8 = 1        //编码器方向

#10=0.5   //两次误差值

#21=0  //读取次数
#22=0
#23=0

N10

#1760 = 1790  	(接受数据缓冲地址)
#1761 = 0     	(串口0)
#1762 = #7  	(X轴从机ID号)
#1763 = 57361  	(编码器圈数地址 )
#1764 = 2  	    (字节数)
#1765 = 0  	    (功能码03)
#1769 = 1  	    (触发读取)
WHILE [#1769 NE 0] DO2 (等待结束完成)
G04P10
END2 
#1510=#1766
#1503 = 1(圈数返回码:[%.0f])

IF #1766!=0 GOTO30
//数据转换
#1770 = 1770
#1771 = 1790 	//字符串索引
#1772 =2 	//字节数
#1773 = 1 	//16位有符号整形
#1775 =1 	//数据转换
#1 = #1770 	//编码器圈数

//#1510=#1770
//#1503 = 1	(H0B-70:[%.0f])
G04 P1
//读取编码器一圈内位置
#1763 = 57360  	(编码器一圈内位置 )
#1764 = 4  	    (字节数)
#1769 = 1  	    (触发读取)
WHILE [#1769 NE 0] DO3 (等待结束完成)
G04P10
END3 
#1510=#1766
#1503 = 1(单圈返回码:[%.0f])

IF #1766!=0 GOTO30
//数据转换
#1770 = 1770
#1771 = 1790 	//字符串索引
#1772 =4 	//字节数
#1773 = 4 	//32位无符号整形
#1775 =1 	//数据转换
#2 = #1770 	//编码器一圈内个数

//#1510=#1770
//#1503 = 1(H0B-71:[%.0f])
G04 P1
#4=#1+[#2/#3] 	//当前位置圈数 浮点型

//连续读两次
#[22+#21]=#4
IF#21==1 GOTO11
#21=#21+1
GOTO10
N11
#24=ABS[#22-#23]
IF#24>#10 GOTO12
GOTO13
N12
#21=0
GOTO10

N13

#5=#4*[#8]	//调整编码器方向  
#9 = #5-#604   //计算相对零点的圈数
#883 = #9*#6     //设置当前机械位置 
#1510=#7 //ID
#1511=#1    //多圈
#1512=#2    //单圈
#1513=#5    //
#1503 = 1(  Z轴   SD700 ID[%.0f]:   %.0f   %.0f    %.3f圈)
N30
M99

//5th轴绝对值数据
O10109
#3 =  8388608  //24位编码器
#6 = 1        //螺距
#7 = 5        //从机ID
#8 = 1        //编码器方向

#10=0.5   //两次误差值

#21=0  //读取次数
#22=0
#23=0

N10

#1760 = 1790  	(接受数据缓冲地址)
#1761 = 0     	(串口0)
#1762 = #7  	(X轴从机ID号)
#1763 = 57361  	(编码器圈数地址 )
#1764 = 2  	    (字节数)
#1765 = 0  	    (功能码03)
#1769 = 1  	    (触发读取)
WHILE [#1769 NE 0] DO2 (等待结束完成)
G04P10
END2 
#1510=#1766
#1503 = 1(圈数返回码:[%.0f])

IF #1766!=0 GOTO30
//数据转换
#1770 = 1770
#1771 = 1790 	//字符串索引
#1772 =2 	//字节数
#1773 = 1 	//16位有符号整形
#1775 =1 	//数据转换
#1 = #1770 	//编码器圈数

//#1510=#1770
//#1503 = 1	(H0B-70:[%.0f])
G04 P1
//读取编码器一圈内位置
#1763 = 57360  	(编码器一圈内位置 )
#1764 = 4  	    (字节数)
#1769 = 1  	    (触发读取)
WHILE [#1769 NE 0] DO3 (等待结束完成)
G04P10
END3 
#1510=#1766
#1503 = 1(单圈返回码:[%.0f])

IF #1766!=0 GOTO30
//数据转换
#1770 = 1770
#1771 = 1790 	//字符串索引
#1772 =4 	//字节数
#1773 = 4 	//32位无符号整形
#1775 =1 	//数据转换
#2 = #1770 	//编码器一圈内个数

//#1510=#1770
//#1503 = 1(H0B-71:[%.0f])
G04 P1
#4=#1+[#2/#3] 	//当前位置圈数 浮点型

//连续读两次
#[22+#21]=#4
IF#21==1 GOTO11
#21=#21+1
GOTO10
N11
#24=ABS[#22-#23]
IF#24>#10 GOTO12
GOTO13
N12
#21=0
GOTO10

N13

#5=#4*[#8]	//调整编码器方向  
#9 = #5-#605   //计算相对零点的圈数
#884 = #9*#6     //设置当前机械位置 
#1510=#7 //ID
#1511=#1    //多圈
#1512=#2    //单圈
#1513=#5    //
#1503 = 1(  4th轴   SD700 ID[%.0f]:   %.0f   %.0f    %.3f圈)
N30
M99


//X轴绝对值机械零点清除
O10110 
#3 = 8388608  //24位编码器
#6 = 1        //螺距
#7 = 1        //从机ID
#8 = 1        //编码器方向
#10=0.5   //两次误差值

#21=0  //读取次数
#22=0
#23=0

N10
#1760 = 1790  	(接受数据缓冲地址)
#1761 = 0     	(串口0)
#1762 = #7  	(X轴从机ID号)
#1763 = 57361  	(编码器圈数地址 )
#1764 = 2  	    (字节数)
#1765 = 0  	    (功能码03)
#1769 = 1  	    (触发读取)
WHILE [#1769 NE 0] DO2 (等待结束完成)
G04P10
END2 
#1510=#1766
#1503 = 1(圈数返回码:[%.0f])

IF #1766!=0 GOTO30
//数据转换
#1770 = 1770
#1771 = 1790 	//字符串索引
#1772 =2 	//字节数
#1773 = 1 	//16位有符号整形
#1775 =1 	//数据转换
#1 = #1770 	//编码器圈数

//#1510=#1770
//#1503 = 1	(H0B-70:[%.0f])
G04 P1
//读取编码器一圈内位置
#1763 = 57360  	(编码器一圈内位置 )
#1764 = 4  	    (字节数)
#1769 = 1  	    (触发读取)
WHILE [#1769 NE 0] DO3 (等待结束完成)
G04P10
END3 
#1510=#1766
#1503 = 1(单圈返回码:[%.0f])

IF #1766!=0 GOTO30
//数据转换
#1770 = 1770
#1771 = 1790 	//字符串索引
#1772 =4 	//字节数
#1773 = 4 	//32位无符号整形
#1775 =1 	//数据转换
#2 = #1770 	//编码器一圈内个数

//#1510=#1770
//#1503 = 1(H0B-71:[%.0f])
G04 P1
#4=#1+[#2/#3] 	//当前位置圈数 浮点型

//连续读两次
#[22+#21]=#4
IF#21==1 GOTO11
#21=#21+1
GOTO10
N11
#24=ABS[#22-#23]
IF#24>#10 GOTO12
GOTO13
N12
#21=0
GOTO10

N13

#5=#4*[#8]	//调整编码器方向
#601 = #5      //保存机械零点圈数
#880 = 0     //清机械零     
#1510=#7 //ID
#1511=#1    //多圈
#1512=#2    //单圈
#1513=#5    //
#1503 = 1(  X轴   SD700 ID[%.0f]:   %.0f   %.0f    %.3f圈)
N30
M99

//Y轴绝对值机械零点清除
O10111 
#3 =  8388608  //24位编码器
#6 = 1        //螺距
#7 = 2        //从机ID
#8 = 1        //编码器方向

#10=0.5   //两次误差值

#21=0  //读取次数
#22=0
#23=0

N10

#1760 = 1790  	(接受数据缓冲地址)
#1761 = 0     	(串口0)
#1762 = #7  	(X轴从机ID号)
#1763 = 57361  	(编码器圈数地址 )
#1764 = 2  	    (字节数)
#1765 = 0  	    (功能码03)
#1769 = 1  	    (触发读取)
WHILE [#1769 NE 0] DO2 (等待结束完成)
G04P10
END2 
#1510=#1766
#1503 = 1(圈数返回码:[%.0f])

IF #1766!=0 GOTO30
//数据转换
#1770 = 1770
#1771 = 1790 	//字符串索引
#1772 =2 	//字节数
#1773 = 1 	//16位有符号整形
#1775 =1 	//数据转换
#1 = #1770 	//编码器圈数

//#1510=#1770
//#1503 = 1	(H0B-70:[%.0f])
G04 P1
//读取编码器一圈内位置
#1763 = 57360  	(编码器一圈内位置 )
#1764 = 4  	    (字节数)
#1769 = 1  	    (触发读取)
WHILE [#1769 NE 0] DO3 (等待结束完成)
G04P10
END3 
#1510=#1766
#1503 = 1(单圈返回码:[%.0f])

IF #1766!=0 GOTO30
//数据转换
#1770 = 1770
#1771 = 1790 	//字符串索引
#1772 =4 	//字节数
#1773 = 4 	//32位无符号整形
#1775 =1 	//数据转换
#2 = #1770 	//编码器一圈内个数

//#1510=#1770
//#1503 = 1(H0B-71:[%.0f])
G04 P1
#4=#1+[#2/#3] 	//当前位置圈数 浮点型

//连续读两次
#[22+#21]=#4
IF#21==1 GOTO11
#21=#21+1
GOTO10
N11
#24=ABS[#22-#23]
IF#24>#10 GOTO12
GOTO13
N12
#21=0
GOTO10

N13


#5=#4*[#8]	//调整编码器方向
#602 = #5      //保存机械零点圈数
#881 = 0     //清机械零     
#1510=#7 //ID
#1511=#1    //多圈
#1512=#2    //单圈
#1513=#5    //
#1503 = 1(  Y轴   SD700 ID[%.0f]:   %.0f   %.0f    %.3f圈)
N30
M99

//Z轴绝对值机械零点清除
O10112 
#3 =  8388608  //24位编码器
#6 = 1        //螺距
#7 = 3        //从机ID
#8 = 1        //编码器方向

#10=0.5   //两次误差值

#21=0  //读取次数
#22=0
#23=0

N10

#1760 = 1790  	(接受数据缓冲地址)
#1761 = 0     	(串口0)
#1762 = #7  	(X轴从机ID号)
#1763 = 57361  	(编码器圈数地址 )
#1764 = 2  	    (字节数)
#1765 = 0  	    (功能码03)
#1769 = 1  	    (触发读取)
WHILE [#1769 NE 0] DO2 (等待结束完成)
G04P10
END2 
#1510=#1766
#1503 = 1(圈数返回码:[%.0f])

IF #1766!=0 GOTO30
//数据转换
#1770 = 1770
#1771 = 1790 	//字符串索引
#1772 =2 	//字节数
#1773 = 1 	//16位有符号整形
#1775 =1 	//数据转换
#1 = #1770 	//编码器圈数

//#1510=#1770
//#1503 = 1	(H0B-70:[%.0f])
G04 P1
//读取编码器一圈内位置
#1763 = 57360  	(编码器一圈内位置 )
#1764 = 4  	    (字节数)
#1769 = 1  	    (触发读取)
WHILE [#1769 NE 0] DO3 (等待结束完成)
G04P10
END3 
#1510=#1766
#1503 = 1(单圈返回码:[%.0f])

IF #1766!=0 GOTO30
//数据转换
#1770 = 1770
#1771 = 1790 	//字符串索引
#1772 =4 	//字节数
#1773 = 4 	//32位无符号整形
#1775 =1 	//数据转换
#2 = #1770 	//编码器一圈内个数

//#1510=#1770
//#1503 = 1(H0B-71:[%.0f])
G04 P1
#4=#1+[#2/#3] 	//当前位置圈数 浮点型

//连续读两次
#[22+#21]=#4
IF#21==1 GOTO11
#21=#21+1
GOTO10
N11
#24=ABS[#22-#23]
IF#24>#10 GOTO12
GOTO13
N12
#21=0
GOTO10

N13


#5=#4*[#8]	//调整编码器方向
#603 = #5      //保存机械零点圈数
#882 = 0     //清机械零     
#1510=#7 //ID
#1511=#1    //多圈
#1512=#2    //单圈
#1513=#5    //
#1503 = 1(  Z轴   SD700 ID[%.0f]:   %.0f   %.0f    %.3f圈)
N30
M99


//4th轴绝对值机械零点清除
O10113 
#3 =  8388608  //24位编码器
#6 = 1        //螺距
#7 = 4        //从机ID
#8 = 1        //编码器方向

#10=0.5   //两次误差值

#21=0  //读取次数
#22=0
#23=0

N10

#1760 = 1790  	(接受数据缓冲地址)
#1761 = 0     	(串口0)
#1762 = #7  	(X轴从机ID号)
#1763 = 57361  	(编码器圈数地址 )
#1764 = 2  	    (字节数)
#1765 = 0  	    (功能码03)
#1769 = 1  	    (触发读取)
WHILE [#1769 NE 0] DO2 (等待结束完成)
G04P10
END2 
#1510=#1766
#1503 = 1(圈数返回码:[%.0f])

IF #1766!=0 GOTO30
//数据转换
#1770 = 1770
#1771 = 1790 	//字符串索引
#1772 =2 	//字节数
#1773 = 1 	//16位有符号整形
#1775 =1 	//数据转换
#1 = #1770 	//编码器圈数

//#1510=#1770
//#1503 = 1	(H0B-70:[%.0f])
G04 P1
//读取编码器一圈内位置
#1763 = 57360  	(编码器一圈内位置 )
#1764 = 4  	    (字节数)
#1769 = 1  	    (触发读取)
WHILE [#1769 NE 0] DO3 (等待结束完成)
G04P10
END3 
#1510=#1766
#1503 = 1(单圈返回码:[%.0f])

IF #1766!=0 GOTO30
//数据转换
#1770 = 1770
#1771 = 1790 	//字符串索引
#1772 =4 	//字节数
#1773 = 4 	//32位无符号整形
#1775 =1 	//数据转换
#2 = #1770 	//编码器一圈内个数

//#1510=#1770
//#1503 = 1(H0B-71:[%.0f])
G04 P1
#4=#1+[#2/#3] 	//当前位置圈数 浮点型

//连续读两次
#[22+#21]=#4
IF#21==1 GOTO11
#21=#21+1
GOTO10
N11
#24=ABS[#22-#23]
IF#24>#10 GOTO12
GOTO13
N12
#21=0
GOTO10

N13


#5=#4*[#8]	//调整编码器方向
#604 = #5      //保存机械零点圈数
#883 = 0     //清机械零     
#1510=#7 //ID
#1511=#1    //多圈
#1512=#2    //单圈
#1513=#5    //
#1503 = 1(  4th轴   SD700 ID[%.0f]:   %.0f   %.0f    %.3f圈)
N30
M99

//5th轴绝对值机械零点清除
O10114 
#3 =  8388608  //24位编码器
#6 = 1        //螺距
#7 = 5        //从机ID
#8 = 1        //编码器方向

#10=0.5   //两次误差值

#21=0  //读取次数
#22=0
#23=0

N10

#1760 = 1790  	(接受数据缓冲地址)
#1761 = 0     	(串口0)
#1762 = #7  	(X轴从机ID号)
#1763 = 57361  	(编码器圈数地址 )
#1764 = 2  	    (字节数)
#1765 = 0  	    (功能码03)
#1769 = 1  	    (触发读取)
WHILE [#1769 NE 0] DO2 (等待结束完成)
G04P10
END2 
#1510=#1766
#1503 = 1(圈数返回码:[%.0f])

IF #1766!=0 GOTO30
//数据转换
#1770 = 1770
#1771 = 1790 	//字符串索引
#1772 =2 	//字节数
#1773 = 1 	//16位有符号整形
#1775 =1 	//数据转换
#1 = #1770 	//编码器圈数

//#1510=#1770
//#1503 = 1	(H0B-70:[%.0f])
G04 P1
//读取编码器一圈内位置
#1763 = 57360  	(编码器一圈内位置 )
#1764 = 4  	    (字节数)
#1769 = 1  	    (触发读取)
WHILE [#1769 NE 0] DO3 (等待结束完成)
G04P10
END3 
#1510=#1766
#1503 = 1(单圈返回码:[%.0f])

IF #1766!=0 GOTO30
//数据转换
#1770 = 1770
#1771 = 1790 	//字符串索引
#1772 =4 	//字节数
#1773 = 4 	//32位无符号整形
#1775 =1 	//数据转换
#2 = #1770 	//编码器一圈内个数

//#1510=#1770
//#1503 = 1(H0B-71:[%.0f])
G04 P1
#4=#1+[#2/#3] 	//当前位置圈数 浮点型

//连续读两次
#[22+#21]=#4
IF#21==1 GOTO11
#21=#21+1
GOTO10
N11
#24=ABS[#22-#23]
IF#24>#10 GOTO12
GOTO13
N12
#21=0
GOTO10

N13

#5=#4*[#8]	//调整编码器方向
#605 = #5      //保存机械零点圈数
#884 = 0     //清机械零     
#1510=#7 //ID
#1511=#1    //多圈
#1512=#2    //单圈
#1513=#5    //
#1503 = 1(  5th轴   SD700 ID[%.0f]:   %.0f   %.0f    %.3f圈)
N30
M99



//系统开机代码
O10115

//打开Z轴抱闸
IF #1243==0 GOTO1
#[1552+#1242] = 1 
G04 P500
N1

IF #1992==0 GOTO2
M98P501X2
M98P501X0
M98P501X1
M98P501X3
M98P501X4


N2
IF #600==0 GOTO30
M105 //X轴原点读取
M106 
M107 
M108 
M109
GOTO30

N30
M99



//RTCP功能打开
O10116

#1994 = 1
M99



//RTCP功能关闭
O10117

#1994 = 0
M99


//cam 输入检测
O10118
#4 = #2092 //输入端口
#6 = #2093 //有效电平
WHILE [#[1520+#4-1] != #6] DO1   
G04 P10
END1 

M99

//暂停动作M代码
O10119
#1507 = 0(加工时间暂停)
IF #591==0 GOTO2
G91G00Z#570
N2
IF #584==0 GOTO1
M5
N1
M99

//按键松开
O10120
#1503 = 1(M120)
//IF #[1552+16-1]==1 GOTO30
M155

N30
M99

//按键2长安
O10121
#1503 = 1(M121)
IF #[1552+#1215]==1 GOTO30
M154

N30
M99


//按键2长安
O10122
#1503 = 1(M122)
IF #[1552+#1215]==1 GOTO30
M154

N30
M99

//百分表读取
O10129

#2094 = 1  	    (触发读取)
WHILE [#2094 NE 0] DO2 (等待结束完成)
G04P10
END2 
IF #2095!=0 GOTO30
#2097=1
N30
M99


//K1 对应M代码
O10130 
IF #[1552+#1277]==1 GOTO20;
#1300=0
T1
GOTO30
N20
T0
N30

M99

//K2 对应M代码
O10131 
IF #[1552+#1280]==1 GOTO20;
#1300=0
T2
GOTO30
N20
T0
N30


M99

//K3 对应M代码
O10132 
IF #[1552+#1283]==1 GOTO20;
#1300=0
T3
GOTO30
N20
T0
N30

M99

//K4 对应M代码
O10133 
IF #[1552+#1286]==1 GOTO20;
#1300=0
T4
GOTO30
N20
T0
N30


M99

//K7 自动录入刀偏
O10136
#[1430 + [#1300-1]] = #882 ;刷新当前刀具的Z偏移
#1503 = 1(当前Z刀偏设置完成!)
G04 P1000
M99

//主轴正转
O10140

#4 = #1126 //输入端口
#5 = #1127 //输入使能
#6 = #1128 //有效电平

IF #5==0 GOTO29  //刀锁紧检测
IF [#[1520+#4-1] != #6] GOTO30 
N29 
M3S#585

N30
M99

//多工序指示灯控制
O10141

#[1930+#2072] = 0
#[1930+#2073] = 0
#[1930+#2074] = 0
#[1930+#2075] = 0

IF #1278==0  GOTO13 //
IF #[1552+#1277]==0 GOTO13 
#[1930+#2072] = 1

N13

IF #1281==0  GOTO23 //
IF #[1552+#1280]==0 GOTO23 
#[1930+#2073] = 1
N23

IF #1284==0  GOTO33 //
IF #[1552+#1283]==0 GOTO33 
#[1930+#2074] = 1
N33

IF #1287==0  GOTO43 //
IF #[1552+#1286]==0 GOTO43 
#[1930+#2075] = 1
N43


M99

//除尘罩打开
O10150 
#1 = #1262 //输出端口
#2 = #1263 //端口使能
#3 = #1264 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 //除尘罩打开输出
N30
M99




//除尘罩关闭
O10151 
#1 = #1262 //输出端口
#2 = #1263 //端口使能
#3 = 1-#1264 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 //除尘罩关闭输出

N30
M99


//刀库打开
O10152 
#1 = #1253 //输出端口
#2 = #1254 //端口使能
#3 = #1255 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 //刀库打开

N30
M99

//刀库关闭
O10153 
#1 = #1253 //输出端口
#2 = #1254 //端口使能
#3 = 1-#1255 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 
N30
M99

//主轴松刀输出
O10154 
#1 = #1250 //输出端口
#2 = #1251 //端口使能
#3 = #1252 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99

//主轴锁紧输出
O10155 
#1 = #1250 //输出端口
#2 = #1251 //端口使能
#3 = 1-#1252 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 
N30

M99

//定位气缸打开
O10156 
#1 = #1256 //输出端口
#2 = #1257 //端口使能
#3 = #1258 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99


//定位气缸关闭
O10157 
#1 = #1256 //输出端口
#2 = #1257 //端口使能
#3 = 1-#1258 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 


N30
M99

//真空泵打开
O10158 
#1 = #1259 //输出端口
#2 = #1260 //端口使能
#3 = #1261 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99


//真空泵关闭
O10159 
#1 = #1259 //输出端口
#2 = #1260 //端口使能
#3 = 1-#1261 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99

//推料打开
O10160
#1 = #1265 //输出端口
#2 = #1266 //端口使能
#3 = #1267 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99


//退料关闭
O10161 
#1 = #1265 //输出端口
#2 = #1266 //端口使能
#3 = 1-#1267 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99


//吸尘器打开
O10162
#1 = #1268 //输出端口
#2 = #1269 //端口使能
#3 = #1270 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99


//吸尘器关闭
O10163 
#1 = #1268 //输出端口
#2 = #1269 //端口使能
#3 = 1-#1270 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99

//左定位气缸打开
O10164
#1 = #1271 //输出端口
#2 = #1272 //端口使能
#3 = #1273 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99


//左定位气缸关闭
O10165
#1 = #1271 //输出端口
#2 = #1272 //端口使能
#3 = 1-#1273 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99

//真空阀气缸打开
O10166
#1 = #1274 //输出端口
#2 = #1275 //端口使能
#3 = #1276 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99


//真空阀气缸关闭
O10167
#1 = #1274 //输出端口
#2 = #1275 //端口使能
#3 = 1-#1276 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99


//多工序气缸1 打开
O10168
#1 = #1277 //输出端口
#2 = #1278 //端口使能
#3 = #1279 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99


//多工序气缸1 关闭
O10169 
#1 = #1277 //输出端口
#2 = #1278 //端口使能
#3 = 1-#1279 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99

//多工序气缸2 打开
O10170
#1 = #1280 //输出端口
#2 = #1281 //端口使能
#3 = #1282 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99


//多工序气缸2 关闭
O10171 
#1 = #1280 //输出端口
#2 = #1281 //端口使能
#3 = 1-#1282 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99


//多工序气缸3 打开
O10172
#1 = #1283 //输出端口
#2 = #1284 //端口使能
#3 = #1285 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99


//多工序气缸3 关闭
O10173 
#1 = #1283 //输出端口
#2 = #1284 //端口使能
#3 = 1-#1285 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99

//多工序气缸4 打开
O10174
#1 = #1286 //输出端口
#2 = #1287 //端口使能
#3 = #1288 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99


//多工序气缸4 关闭
O10175
#1 = #1286 //输出端口
#2 = #1287 //端口使能
#3 = 1-#1288 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99

//1号冷却液 打开
O10176
#1 = #1289 //输出端口
#2 = #1290 //端口使能
#3 = #1291 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99


//1号冷却液 关闭
O10177
#1 = #1289 //输出端口
#2 = #1290 //端口使能
#3 = 1-#1291 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99


//2号冷却液 打开
O10178
#1 = #1292 //输出端口
#2 = #1293 //端口使能
#3 = #1294 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99


//2号冷却液 关闭
O10179
#1 = #1292 //输出端口
#2 = #1293 //端口使能
#3 = 1-#1294 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 

N30
M99


//伺服主轴模式切换打开
O10180
#1 = #1295 //输出端口
#2 = #1296 //端口使能
#3 = #1297 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 
#579 = 1  //伺服主轴


N30
M99


//伺服主轴模式切换关闭
O10181
#1 = #1295 //输出端口
#2 = #1296 //端口使能
#3 = 1-#1297 //输出电平
IF #2==0 GOTO30
#[1552+#1] = #3 
#579 = 0  //模拟主轴
N30
M99




/*M250开始为扩展按键M代码*/

//扩展按键1
O10250
#1=1997
IF #[#1]==0 GOTO10 //未按下
IF #[#1]==1 GOTO11 //按下
//
N10 
#[#1] = 1
GOTO30

N11
#[#1] = 0
GOTO30
N30
M99

//扩展按键2
O10251
#1=1998
IF #[#1]==0 GOTO10 //未按下
IF #[#1]==1 GOTO11 //按下
//
N10 
#[#1] = 1
GOTO30

N11
#[#1] = 0
GOTO30
N30
M99

//扩展按键3
O10252
#1=1999
IF #[#1]==0 GOTO10 //未按下
IF #[#1]==1 GOTO11 //按下
//
N10 
#[#1] = 1
GOTO30

N11
#[#1] = 0
GOTO30
N30
M99

//扩展按键4
O10253
#1=2000
IF #[#1]==0 GOTO10 //未按下
IF #[#1]==1 GOTO11 //按下
//
N10 
#[#1] = 1
GOTO30

N11
#[#1] = 0
GOTO30
N30
M99


//扩展按键5
O10254
#1=2001
IF #[#1]==0 GOTO10 //未按下
IF #[#1]==1 GOTO11 //按下
//
N10 
#[#1] = 1
GOTO30

N11
#[#1] = 0
GOTO30
N30
M99

//扩展按键6
O10255
#1=2002
IF #[#1]==0 GOTO10 //未按下
IF #[#1]==1 GOTO11 //按下
//
N10 
#[#1] = 1
GOTO30

N11
#[#1] = 0
GOTO30
N30
M99

//扩展按键7
O10256
#1=2003
IF #[#1]==0 GOTO10 //未按下
IF #[#1]==1 GOTO11 //按下
//
N10 
#[#1] = 1
GOTO30

N11
#[#1] = 0
GOTO30
N30
M99

//扩展按键8
O10257
#1=2004
IF #[#1]==0 GOTO10 //未按下
IF #[#1]==1 GOTO11 //按下
//
N10 
#[#1] = 1
GOTO30

N11
#[#1] = 0
GOTO30
N30
M99

//扩展按键9
O10258
#1=2005
IF #[#1]==0 GOTO10 //未按下
IF #[#1]==1 GOTO11 //按下
//
N10 
#[#1] = 1
GOTO30

N11
#[#1] = 0
GOTO30
N30
M99

//扩展按键10
O10259
#1=2006
IF #[#1]==0 GOTO10 //未按下
IF #[#1]==1 GOTO11 //按下
//
N10 
#[#1] = 1
GOTO30

N11
#[#1] = 0
GOTO30
N30
M99

//扩展按键11
O10260
#1=2007
IF #[#1]==0 GOTO10 //未按下
IF #[#1]==1 GOTO11 //按下
//
N10 
#[#1] = 1
GOTO30

N11
#[#1] = 0
GOTO30
N30
M99

//扩展按键12
O10261
#1=2008
IF #[#1]==0 GOTO10 //未按下
IF #[#1]==1 GOTO11 //按下
//
N10 
#[#1] = 1
GOTO30

N11
#[#1] = 0
GOTO30
N30
M99

//扩展按键13
O10262
#1=2009
IF #[#1]==0 GOTO10 //未按下
IF #[#1]==1 GOTO11 //按下
//
N10 
#[#1] = 1
GOTO30

N11
#[#1] = 0
GOTO30
N30
M99

//扩展按键14
O10263
#1=2010
IF #[#1]==0 GOTO10 //未按下
IF #[#1]==1 GOTO11 //按下
//
N10 
#[#1] = 1
GOTO30

N11
#[#1] = 0
GOTO30
N30
M99

/*M270开始都是自动模式按键设置*/
//扩展按键1
O10270

M98P501X2
M98P501X0
M98P501X1
M98P501X3
M98P501X4

/*
#1=2017
IF #[#1]==0 GOTO10 //未按下
IF #[#1]==1 GOTO11 //按下
N10 
#[#1] = 1
GOTO30

N11
#[#1] = 0
GOTO30
N30
*/
M99

//扩展按键2
O10271
#1=2018
IF #[#1]==0 GOTO10 //未按下
IF #[#1]==1 GOTO11 //按下
//
N10 
#[#1] = 1
GOTO30

N11
#[#1] = 0
GOTO30
N30
M99

//扩展按键3
O10272
#1=2019
IF #[#1]==0 GOTO10 //未按下
IF #[#1]==1 GOTO11 //按下
//
N10 
#[#1] = 1
GOTO30

N11
#[#1] = 0
GOTO30
N30
M99

//扩展按键4
O10273
#1=2020
IF #[#1]==0 GOTO10 //未按下
IF #[#1]==1 GOTO11 //按下
//
N10 
#[#1] = 1
GOTO30

N11
#[#1] = 0
GOTO30
N30
M99

//扩展工位一
O10274
#1=2018
IF #[#1]==0 GOTO30 //处于手动状态
#2037=65928
N30
M99


//扩展按键6
O10275
#1=2018
IF #[#1]==0 GOTO30 //处于手动状态
#2037=65929
N30
M99

//扩展按键7
O10276
#1=2018
IF #[#1]==0 GOTO30 //处于手动状态
#2037=65930
N30
M99

//扩展按键8
O10277
#1=2018
IF #[#1]==0 GOTO30 //处于手动状态
#2037=65931
N30
M99

//扩展按键9
O10278
#1=2025
IF #[#1]==0 GOTO10 //未按下
IF #[#1]==1 GOTO11 //按下
//
N10 
#[#1] = 1
GOTO30

N11
#[#1] = 0
GOTO30
N30
M99

//扩展按键10
O10279
#1=2026
IF #[#1]==0 GOTO10 //未按下
IF #[#1]==1 GOTO11 //按下
//
N10 
#[#1] = 1
GOTO30

N11
#[#1] = 0
GOTO30
N30
M99

//扩展按键11
O10280
#1=2027
IF #[#1]==0 GOTO10 //未按下
IF #[#1]==1 GOTO11 //按下
//
N10 
#[#1] = 1
GOTO30

N11
#[#1] = 0
GOTO30
N30
M99

//扩展按键12
O10281
#1=2028
IF #[#1]==0 GOTO10 //未按下
IF #[#1]==1 GOTO11 //按下
//
N10 
#[#1] = 1
GOTO30

N11
#[#1] = 0
GOTO30
N30
M99



/*M300开始都是输入检测*/


//主轴停止检测
O10300 
#4 = #1120 //输入端口
#5 = #1121 //输入使能
#6 = #1122 //有效电平
IF #4==0 GOTO30
IF #5==0 GOTO30
WHILE [#[1520+#4-1] != #6] DO1   
#1503 = 1(主轴停止检测..)
G04 P10
END1 
N30
M99

//刀具松开检测
O10301
#4 = #1123 //输入端口
#5 = #1124 //输入使能
#6 = #1125 //有效电平
IF #4==0 GOTO30
IF #5==0 GOTO30
WHILE [#[1520+#4-1] != #6] DO1   
#1503 = 1(刀具松开检测..)
G04 P10
END1 
N30
M99


//刀具锁紧检测
O10302
#4 = #1126 //输入端口
#5 = #1127 //输入使能
#6 = #1128 //有效电平
IF #4==0 GOTO30
IF #5==0 GOTO30
WHILE [#[1520+#4-1] != #6] DO1   
#1503 = 1(刀具锁紧检测..)
G04 P10
END1 
N30
M99

//刀具打开检测
O10303
#4 = #1129 //输入端口
#5 = #1130 //输入使能
#6 = #1131 //有效电平
IF #4==0 GOTO30
IF #5==0 GOTO30
WHILE [#[1520+#4-1] != #6] DO1   
#1503 = 1(刀库打开检测..)
G04 P10
END1 
N30
M99


//刀具关闭检测
O10304
#4 = #1197 //输入端口
#5 = #1198 //输入使能
#6 = #1199 //有效电平
IF #4==0 GOTO30
IF #5==0 GOTO30
WHILE [#[1520+#4-1] != #6] DO1   
#1503 = 1(刀库关闭检测..)
G04 P10
END1 
N30
M99

//除尘罩打开检测
O10305
#4 = #1132 //输入端口
#5 = #1133 //输入使能
#6 = #1134 //有效电平
IF #4==0 GOTO30
IF #5==0 GOTO30
WHILE [#[1520+#4-1] != #6] DO1   
#1503 = 1(除尘罩打开检测..)
G04 P10
END1 
N30
M99

//除尘罩关闭检测
O10306
#4 = #1132 //输入端口
#5 = #1133 //输入使能
#6 = 1-#1134 //有效电平
IF #4==0 GOTO30
IF #5==0 GOTO30
WHILE [#[1520+#4-1] != #6] DO1   
#1503 = 1(除尘罩关闭检测..)
G04 P10
END1 
N30
M99

//伺服定位完成检测
O10307 
#4 = #1194 //输入端口
#5 = #1195 //输入使能
#6 = #1196 //有效电平
IF #4==0 GOTO30
IF #5==0 GOTO30
WHILE [#[1520+#4-1] != #6] DO1   
#1503 = 1(伺服定位完成检测..)
G04 P10
END1 
N30
M99
